// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Customer {
  id        Int      @id @default(autoincrement())
  roleId    Int      @default(1)
  role      Role     @relation(fields: [roleId], references: [id])
  firstName String
  lastName  String
  address   String
  zip       Int
  city      String
  phone     Int
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Car       Car[]

  @@index([roleId])
}

model Employee {
  id           Int        @id @default(autoincrement())
  roleId       Int        @default(0)
  role         Role       @relation(fields: [roleId], references: [id])
  departmentId Int
  department   Department @relation(fields: [departmentId], references: [id])
  firstName    String
  lastName     String
  email        String     @unique
  password     String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@index([roleId])
  @@index([departmentId])
}

model Car {
  id                   Int      @id @default(autoincrement())
  customerId           Int
  customer             Customer @relation(fields: [customerId], references: [id])
  registrationNumber   String   @unique
  vin                  String   @unique
  brand                String
  model                String
  modelVariant         String
  firstRegistration    DateTime @db.Date
  mileage              Int
  lastInspectionDate   DateTime @db.Date
  lastInspectionResult String
  lastInspectionKind   String
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  Order                Order[]

  @@index([customerId])
}

model Status {
  id                Int                 @id @default(autoincrement())
  description       String
  Order             Order[]
  OrderWorkflowTask OrderWorkflowTask[]
}

model Role {
  id       Int        @id @default(autoincrement())
  name     String
  Customer Customer[]
  Employee Employee[]
}

model Department {
  id       Int        @id @default(autoincrement())
  name     String
  Employee Employee[]
}

model Order {
  id                Int                 @id @default(autoincrement())
  carId             Int
  statusId          Int
  car               Car                 @relation(fields: [carId], references: [id])
  status            Status              @relation(fields: [statusId], references: [id])
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  OrderWorkflow     OrderWorkflow[]
  OrderWorkflowTask OrderWorkflowTask[]

  @@index([carId])
  @@index([statusId])
}

model Task {
  id                Int                 @id @default(autoincrement())
  name              String              @unique
  time              Float               @db.Float
  description       String
  WorkflowTask      WorkflowTask[]
  OrderWorkflowTask OrderWorkflowTask[]
}

model Workflow {
  id                Int                 @id @default(autoincrement())
  name              String
  description       String
  WorkflowTask      WorkflowTask[]
  OrderWorkflow     OrderWorkflow[]
  OrderWorkflowTask OrderWorkflowTask[]
}

model OrderWorkflow {
  orderId    Int
  workflowId Int
  order      Order    @relation(fields: [orderId], references: [id])
  workflow   Workflow @relation(fields: [workflowId], references: [id])

  @@id([orderId, workflowId]) // composite id
  @@index([orderId])
  @@index([workflowId])
}

model WorkflowTask {
  workflowId Int
  taskId     Int
  workflow   Workflow @relation(fields: [workflowId], references: [id])
  task       Task     @relation(fields: [taskId], references: [id])

  @@id([workflowId, taskId]) // composite id
  @@index([workflowId])
  @@index([taskId])
}

model OrderWorkflowTask {
  orderId     Int
  taskId      Int
  workflowId  Int
  statusId    Int
  startedAt   DateTime?
  completedAt DateTime?
  order       Order     @relation(fields: [orderId], references: [id])
  task        Task      @relation(fields: [taskId], references: [id])
  workflow    Workflow  @relation(fields: [workflowId], references: [id])
  status      Status    @relation(fields: [statusId], references: [id])

  @@id([orderId, workflowId, taskId]) // composite id
  @@index([orderId])
  @@index([workflowId])
  @@index([taskId])
  @@index([statusId])
}
